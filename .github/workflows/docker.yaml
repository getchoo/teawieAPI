name: Docker

on:
  push:
    branches: [main]
    paths:
      - "**.nix"
      - "**.rs"
      - "**.lock"
      - "Cargo.toml"
  pull_request:
    paths:
      - "**.nix"
      - "**.rs"
      - "**.lock"
      - "Cargo.toml"
  workflow_dispatch:

jobs:
  build:
    name: Build image

    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@ab6bcb2d5af0e904d04aea750e2089e9dc4cbfdd # v13

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@b46e247b898aa56e6d2d2e728dc6df6c84fdb738 # v7

      - name: Build Docker image
        id: build
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          nix build \
            --fallback \
            --print-build-logs \
            .#container-"$ARCH"

          # exit if no `result` from nix build
          [ ! -L result ] && exit 1
          echo "path=$(readlink -f ./result)" >> "$GITHUB_OUTPUT"

      - name: Upload image
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        with:
          name: container-${{ matrix.arch }}
          path: ${{ steps.build.outputs.path }}
          if-no-files-found: error
          retention-days: 1

  release-gate:
    name: Docker Release Gate
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Exit with error
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1

  push:
    name: Push image
    needs: release-gate

    if: github.event_name == 'push'

    runs-on: ubuntu-latest

    permissions:
      packages: write

    env:
      REGISTRY: ghcr.io
      USERNAME: ${{ github.actor }}
      IMAGE_NAME: teawie-api

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Download images
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          path: images

      - name: Login to registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ github.token }}

      - name: Push to registry
        env:
          TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        run: |
          architectures=("x86_64" "aarch64")
          for arch in "${architectures[@]}"; do
            docker load < images/container-"$arch"/*.tar.gz
            docker tag teawie-api:latest-"$arch" "$TAG"-"$arch"
            docker push "$TAG"-"$arch"
          done

          docker manifest create "$TAG" \
            --amend "$TAG"-x86_64 \
            --amend "$TAG"-aarch64

          docker manifest push "$TAG"
